apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file(System.getenv('ANDROID_KEYSTORE_HOME') + File.separator + 'keystore.properties')
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
	compileSdkVersion 31
    //ndkVersion '18.1.5063045'
    ndkVersion '23.1.7779620'

	defaultConfig {
        applicationId 'com.saintjoy.astrumleague'
		minSdkVersion 21
		targetSdkVersion 31
		versionCode 1
        multiDexEnabled true
		versionName '0.0.1'
        useLibrary 'org.apache.http.legacy'

		externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=c++_shared'
            }
        }
	}
	
	signingConfigs {
        saintjoy {
            keyAlias keystoreProperties['sj_cr_keyAlias']
            keyPassword keystoreProperties['sj_cr_keyPassword']
            storeFile file(keystoreProperties['sj_cr_storeFile'])
            storePassword keystoreProperties['sj_cr_storePassword']
            storeType 'jks'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    flavorDimensions 'vendor', 'bundle', 'abi'

	productFlavors {
        saintjoy {
            dimension 'vendor'
            externalNativeBuild {
                cmake {
                    cppFlags += '-DMarket=1'
					cppFlags += '-DVendor=0'
					//arguments += ['-DUseSomething=TRUE']
                }
            }
        }
        full {
            dimension 'bundle'
        }
        arm64 {
            dimension 'abi'
            ndk.abiFilters 'arm64-v8a'
        }
        abiall {
            dimension 'abi'
            ndk.abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86_64'
        }
	}

	buildTypes {
        release {
			productFlavors.saintjoy.signingConfig signingConfigs.saintjoy

            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java',
							'../../CDK/Sources/Platform/android/java/src']

            jniLibs.srcDirs = ['../../CDK/Sources/Platform/android/lib']

            assets.srcDirs = ['../../CDK/Resources'
                              , '../../TalesCraft2/Resources/common']
        }
        saintjoy {
            manifest.srcFile 'src/saintjoy/AndroidManifest.xml'
			
			//jniLibs.srcDirs = []
        }
		full {
			assets.srcDirs = ['../../TalesCraft2/Resources/full/common', '../../TalesCraft2/Resources/full/android']
		}
    }
    externalNativeBuild {
        cmake {
            version '3.22.1'
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
    aaptOptions {
        noCompress 'emd,tfl,tflite,pb,db'
    }
}

dependencies {
    implementation fileTree(include: '*.jar', dir: '../../CDK/Sources/Platform/android/java/lib')
    implementation('com.madgag.spongycastle:prov:1.58.0.0') {
        exclude group: 'junit', module: 'junit'
    }
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly ('io.jsonwebtoken:jjwt-orgjson:0.11.2') {
        exclude group: 'org.json', module: 'json' //provided by Android natively
    }

    implementation 'androidx.work:work-runtime:2.7.1'
    implementation 'com.android.installreferrer:installreferrer:2.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.browser:browser:1.4.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.annotation:annotation:1.3.0'
}

